//Board
export const DISTANCE_TO_BOARD = 50;
export const BOARD_LENGTH = 500;
export const BOARD_STAND_WIDTH = 5;
export const BOARD_TO_STAND_DISTANCE = BOARD_LENGTH/16

// Official Sizes in cm
const Official = {
    HEIGHT: 76,
    LENGTH: 274,
    THICKNESS: 5,
    WIDTH: 152.5,
    MID_LINE: 0.3,
    SIDE_LINES: 2,
    BALL_RADIUS: 2,
    NET_LENGTH: 183,
    NET_HEIGHT: 15.25
}

//Our Board Size
export const BOARD = {
    LENGTH : BOARD_LENGTH,
    WIDTH : BOARD_LENGTH * Official.WIDTH / Official.LENGTH,
    HEIGHT : BOARD_LENGTH * Official.HEIGHT / Official.LENGTH,
    MID_LINE : BOARD_LENGTH * Official.MID_LINE / Official.LENGTH,
    THICKNESS : BOARD_LENGTH * Official.THICKNESS / Official.LENGTH,
    NET_HEIGHT : BOARD_LENGTH * Official.NET_HEIGHT / Official.LENGTH,
    NET_LENGTH : BOARD_LENGTH * Official.NET_LENGTH / Official.LENGTH + 20,
    SIDE_LINES : BOARD_LENGTH * Official.SIDE_LINES / Official.LENGTH,
    BALL_RADIUS : BOARD_LENGTH * Official.BALL_RADIUS / Official.LENGTH,
}

//Board Coordinates
export const BOARD_COORDINATE = [
  {
    leftBot: { x: -1*BOARD.WIDTH/2, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.LENGTH },
    leftTop: { x: -1*BOARD.WIDTH/2, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD },
    rightBot: { x: BOARD.WIDTH/2, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.LENGTH },
    rightTop: { x: BOARD.WIDTH/2, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD },
    //Board Inner Edges
    innerLeftBot: { x: -1*BOARD.WIDTH/2 + BOARD.SIDE_LINES, y:BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH-BOARD.SIDE_LINES },
    innerLeftTop: { x: -1*BOARD.WIDTH/2 + BOARD.SIDE_LINES, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.SIDE_LINES },
    innerRightBot: { x: BOARD.WIDTH/2 - BOARD.SIDE_LINES, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH-BOARD.SIDE_LINES}, 
    innerRightTop: { x: BOARD.WIDTH/2 - BOARD.SIDE_LINES, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.SIDE_LINES}, 
    innerMidLeftBot:  {x: -1*BOARD.MID_LINE/2 , y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH-BOARD.SIDE_LINES },
    innerMidLeftTop: {x: -1*BOARD.MID_LINE/2, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.SIDE_LINES },
    innerMidRightBot:  {x: BOARD.MID_LINE/2 , y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH-BOARD.SIDE_LINES},
    innerMidRightTop: {x: BOARD.MID_LINE/2, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.SIDE_LINES},
    //Net Edges
    netLeftBot: { x: -1*BOARD.NET_LENGTH/2, y: BOARD.HEIGHT+BOARD.NET_HEIGHT, z:DISTANCE_TO_BOARD+(BOARD_LENGTH/2)},
    netLeftTop: { x: -1*BOARD.NET_LENGTH/2, y: BOARD.HEIGHT, z:DISTANCE_TO_BOARD+(BOARD_LENGTH/2)},
    netRightBot: { x: BOARD.NET_LENGTH/2, y: BOARD.HEIGHT+BOARD.NET_HEIGHT, z:DISTANCE_TO_BOARD+(BOARD_LENGTH/2) }, 
    netRightTop: { x: BOARD.NET_LENGTH/2, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+(BOARD_LENGTH/2)},
    //Stand Positions
    leftTopStandUpper: {x: -1*BOARD.WIDTH/2 + BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH  - BOARD_TO_STAND_DISTANCE},
    leftTopStandLower: {x: -1*BOARD.WIDTH/2 + BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT*2, z: DISTANCE_TO_BOARD+BOARD_LENGTH  - BOARD_TO_STAND_DISTANCE},
    leftBotStandUpper: {x: -1*BOARD.WIDTH/2 + BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD + BOARD_TO_STAND_DISTANCE},
    leftBotStandLower: {x: -1*BOARD.WIDTH/2 + BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT*2, z: DISTANCE_TO_BOARD + BOARD_TO_STAND_DISTANCE},
    rightTopStandUpper: {x: BOARD.WIDTH/2 - BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH - BOARD_TO_STAND_DISTANCE},
    rightTopStandLower: {x: BOARD.WIDTH/2 - BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT*2, z: DISTANCE_TO_BOARD + BOARD_LENGTH - BOARD_TO_STAND_DISTANCE},
    rightBotStandUpper: {x: BOARD.WIDTH/2 - BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD + BOARD_TO_STAND_DISTANCE},
    rightBotStandLower: {x: BOARD.WIDTH/2 - BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT*2, z: DISTANCE_TO_BOARD + BOARD_TO_STAND_DISTANCE}
  }, {
    leftBot: { x: -1*BOARD.WIDTH/2.5, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.LENGTH },
    leftTop: { x: -1*BOARD.WIDTH/2.5, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD },
    rightBot: { x: BOARD.WIDTH/2.5, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.LENGTH },
    rightTop: { x: BOARD.WIDTH/2.5, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD },
    //Board Inner Edges
    innerLeftBot: { x: -1*BOARD.WIDTH/2.5 + BOARD.SIDE_LINES, y:BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH-BOARD.SIDE_LINES },
    innerLeftTop: { x: -1*BOARD.WIDTH/2.5 + BOARD.SIDE_LINES, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.SIDE_LINES },
    innerRightBot: { x: BOARD.WIDTH/2.5 - BOARD.SIDE_LINES, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH-BOARD.SIDE_LINES}, 
    innerRightTop: { x: BOARD.WIDTH/2.5 - BOARD.SIDE_LINES, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.SIDE_LINES}, 
    innerMidLeftBot:  {x: -1*BOARD.MID_LINE/2.5 , y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH-BOARD.SIDE_LINES },
    innerMidLeftTop: {x: -1*BOARD.MID_LINE/2.5, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.SIDE_LINES },
    innerMidRightBot:  {x: BOARD.MID_LINE/2.5 , y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH-BOARD.SIDE_LINES},
    innerMidRightTop: {x: BOARD.MID_LINE/2.5, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD.SIDE_LINES},
    //Net Edges
    netLeftBot: { x: -1*BOARD.NET_LENGTH/2.5, y: BOARD.HEIGHT+BOARD.NET_HEIGHT, z:DISTANCE_TO_BOARD+(BOARD_LENGTH/2)},
    netLeftTop: { x: -1*BOARD.NET_LENGTH/2.5, y: BOARD.HEIGHT, z:DISTANCE_TO_BOARD+(BOARD_LENGTH/2)},
    netRightBot: { x: BOARD.NET_LENGTH/2.5, y: BOARD.HEIGHT+BOARD.NET_HEIGHT, z:DISTANCE_TO_BOARD+(BOARD_LENGTH/2) }, 
    netRightTop: { x: BOARD.NET_LENGTH/2.5, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+(BOARD_LENGTH/2)},
    //Stand Positions
    leftTopStandUpper: {x: -1*BOARD.WIDTH/2.5 + BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH  - BOARD_TO_STAND_DISTANCE},
    leftTopStandLower: {x: -1*BOARD.WIDTH/2.5 + BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT*2, z: DISTANCE_TO_BOARD+BOARD_LENGTH  - BOARD_TO_STAND_DISTANCE},
    leftBotStandUpper: {x: -1*BOARD.WIDTH/2.5 + BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD + BOARD_TO_STAND_DISTANCE},
    leftBotStandLower: {x: -1*BOARD.WIDTH/2.5 + BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT*2, z: DISTANCE_TO_BOARD + BOARD_TO_STAND_DISTANCE},
    rightTopStandUpper: {x: BOARD.WIDTH/2.5 - BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD+BOARD_LENGTH - BOARD_TO_STAND_DISTANCE},
    rightTopStandLower: {x: BOARD.WIDTH/2.5 - BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT*2, z: DISTANCE_TO_BOARD + BOARD_LENGTH - BOARD_TO_STAND_DISTANCE},
    rightBotStandUpper: {x: BOARD.WIDTH/2.5 - BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT, z: DISTANCE_TO_BOARD + BOARD_TO_STAND_DISTANCE},
    rightBotStandLower: {x: BOARD.WIDTH/2.5 - BOARD_TO_STAND_DISTANCE, y: BOARD.HEIGHT*2, z: DISTANCE_TO_BOARD + BOARD_TO_STAND_DISTANCE}
}]
